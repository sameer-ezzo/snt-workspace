@use '@angular/material' as mat;
@use 'sass:color';
@use 'sass:map';
@use 'sass:meta';

@include mat.core();
// https://github.com/angular/components/blob/main/src/material/core/theming/_palette.scss
$my-primary: mat.define-palette(mat.$light-blue-palette);
$my-accent: mat.define-palette(mat.$pink-palette);
$my-warn: mat.define-palette(mat.$red-palette);

// Define a dark theme
$dark-theme: mat.define-dark-theme((color: (primary: $my-primary, accent: $my-accent, warn: $my-warn ),
            // Only include `typography` and `density` in the default dark theme.
            typography: mat.define-typography-config(),
            density: 0,
        ));

// Define a light theme
$light-theme: mat.define-light-theme((color: (primary: $my-primary, accent: $my-accent, warn: $my-warn),
            typography: mat.define-typography-config(),
            density: 0,
        ));

// @include mat.strong-focus-indicators-theme(#d81b60);
// @include mat.all-component-themes($dark-theme);
@include mat.core-theme($dark-theme);



@mixin paletteToCssVars($palette, $prefix) {

    // Source: https://gist.github.com/shprink/3afa9de385db826ba10b2426eb94d7bd
    @each $key,
    $value in $palette {
        @if #{$key}=='contrast' {
            @include paletteToCssVars($value, $prefix + '-contrast');
        }

        @else {
            --#{$prefix}-#{$key}: #{$value};
        }
    }
}



@media (prefers-color-scheme: dark) {
    @include mat.core-color($dark-theme);
    @include mat.all-component-colors($dark-theme);

    :root {
        @include paletteToCssVars(mat.$dark-theme-background-palette, 'theme');
        @include paletteToCssVars(mat.$dark-theme-foreground-palette, 'theme');
        @include paletteToCssVars($my-primary, 'theme-primary');
        @include paletteToCssVars($my-accent, 'theme-accent');
        @include paletteToCssVars($my-warn, 'theme-warn');
    }
}

// Apply the light theme only when the user prefers light themes.
@media (prefers-color-scheme: light) {
    @include mat.core-color($light-theme);
    @include mat.all-component-colors($light-theme);


    :root {
        @include paletteToCssVars(mat.$light-theme-background-palette, 'theme');
        @include paletteToCssVars(mat.$light-theme-foreground-palette, 'theme');
        @include paletteToCssVars($my-primary, 'theme-primary');
        @include paletteToCssVars($my-accent, 'theme-accent');
        @include paletteToCssVars($my-warn, 'theme-warn');
    }
}